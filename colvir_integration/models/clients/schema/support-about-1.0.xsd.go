// Code generated by xgen. DO NOT EDIT.

package schema

import (
	"encoding/xml"
)

// EchoRequestType ...
type EchoRequestType struct {
	Echo string `xml:"echo"`
	AbstractRequest
}

// EchoResponseType ...
type EchoResponseType struct {
	Result *ResultRawString `xml:"result"`
	AbstractResponse
}

// AboutRequest ...
type AboutRequest struct {
	XMLName xml.Name `xml:"aboutRequest"`
	*AboutRequestType
}

// AboutResponse ...
type AboutResponse struct {
	XMLName xml.Name `xml:"aboutResponse"`
	*AboutResponseType
}

// AboutRequestType ...
type AboutRequestType struct {
	BundleName   string `xml:"bundleName"`
	DbInfoFl     bool   `xml:"dbInfoFl"`
	BundleConfFl bool   `xml:"bundleConfFl"`
	AbstractRequest
}

// AboutResponseType is DB information
type AboutResponseType struct {
	ServerInfo  *ServerInfo  `xml:"serverInfo"`
	DbInfo      *DbInfo      `xml:"dbInfo"`
	ServiceInfo *ServiceInfo `xml:"serviceInfo"`
	AbstractResponse
}

// Bundles ...
type Bundles struct {
	XMLName xml.Name  `xml:"bundles"`
	Bundle  []*Bundle `xml:"bundle"`
}

// ServiceInfo ...
type ServiceInfo struct {
	Bundles *Bundles `xml:"bundles"`
}

// Bundle ...
type Bundle struct {
	Id            int64          `xml:"id"`
	State         string         `xml:"state"`
	Name          string         `xml:"name"`
	SymbolicName  string         `xml:"symbolicName"`
	Version       string         `xml:"version"`
	LastModified  string         `xml:"lastModified"`
	Configuration *Configuration `xml:"configuration"`
}

// Param ...
type Param struct {
	XMLName xml.Name `xml:"param"`
	Key     string   `xml:"key"`
	Value   string   `xml:"value"`
}

// Configuration ...
type Configuration struct {
	Param []*Param `xml:"param"`
}

// ServerInfo ...
type ServerInfo struct {
	Host            string       `xml:"host"`
	Port            int          `xml:"port"`
	CpuCores        int          `xml:"cpuCores"`
	OsInfo          *OsInfo      `xml:"osInfo"`
	KarafInfo       *KarafInfo   `xml:"karafInfo"`
	JavaInfo        *JavaInfo    `xml:"javaInfo"`
	HeapMemUsage    *MemoryUsage `xml:"heapMemUsage"`
	NonHeapMemUsage *MemoryUsage `xml:"nonHeapMemUsage"`
	GcInfo          []*GCInfo    `xml:"gcInfo"`
	ThreadsInfo     *ThreadsInfo `xml:"threadsInfo"`
	ClassesInfo     *ClassesInfo `xml:"classesInfo"`
	KarafLogLevel   string       `xml:"karafLogLevel"`
	CsbLogLevel     string       `xml:"csbLogLevel"`
}

// MemoryUsage ...
type MemoryUsage struct {
	Max       int `xml:"max"`
	Committed int `xml:"committed"`
	Used      int `xml:"used"`
	Free      int `xml:"free"`
}

// JavaInfo ...
type JavaInfo struct {
	Version    string `xml:"version"`
	JreName    string `xml:"jreName"`
	JreVersion string `xml:"jreVersion"`
	JvmName    string `xml:"jvmName"`
	JvmVersion string `xml:"jvmVersion"`
	JvmVendor  string `xml:"jvmVendor"`
	JvmInfo    string `xml:"jvmInfo"`
}

// OsInfo ...
type OsInfo struct {
	Name    string `xml:"name"`
	Version string `xml:"version"`
	Arch    string `xml:"arch"`
}

// KarafInfo ...
type KarafInfo struct {
	Version string `xml:"version"`
	Home    string `xml:"home"`
	Base    string `xml:"base"`
}

// ThreadsInfo ...
type ThreadsInfo struct {
	Live         int64 `xml:"live"`
	Daemon       int64 `xml:"daemon"`
	Peak         int64 `xml:"peak"`
	TotalStarted int64 `xml:"totalStarted"`
}

// ClassesInfo ...
type ClassesInfo struct {
	CurrentLoaded int64 `xml:"currentLoaded"`
	TotalLoaded   int64 `xml:"totalLoaded"`
	TotalUnloaded int64 `xml:"totalUnloaded"`
}

// GCInfo ...
type GCInfo struct {
	Name       string `xml:"name"`
	Collection int64  `xml:"collection"`
	Duration   int64  `xml:"duration"`
}

// DbInfo ...
type DbInfo struct {
	Url             string  `xml:"url"`
	Host            string  `xml:"host"`
	Port            int     `xml:"port"`
	Sid             string  `xml:"sid"`
	Version         string  `xml:"version"`
	ConnectionsMax  int     `xml:"connectionsMax"`
	Connections     int     `xml:"connections"`
	CpuUnits        int     `xml:"cpuUnits"`
	CpuCores        int     `xml:"cpuCores"`
	CpuLoad         float32 `xml:"cpuLoad"`
	MemoryMax       int     `xml:"memoryMax"`
	MemoryAllocated int     `xml:"memoryAllocated"`
	MemoryUsed      int     `xml:"memoryUsed"`
	MemoryFree      int     `xml:"memoryFree"`
}
