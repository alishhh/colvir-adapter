// Code generated by xgen. DO NOT EDIT.

package models

import (
	"encoding/xml"
)

type StatRequest struct {
	XMLName xml.Name   	`xml:"ws:statRequest"`
	Text    string     	`xml:",chardata"`
	Version string     	`xml:"version,attr"`
	Header  StatHeader 	`xml:"v3:header"`
	Body    StatBody	`xml:"ws:body"`
}

type StatHeader struct {
	Text      string `xml:",chardata"`
	Channel   string `xml:"v1:channel"`
	Reference string `xml:"v1:reference"`
	Date      string `xml:"v1:date"`
	Language  string `xml:"v1:language"`
	// Token  	  string `xml:"v1:token"`
	Timeout   string `xml:"v1:timeout"`
}

// RequestBody is Requested transaction identifier or reference.
type StatBody struct {
	Text        string  `xml:",chardata"`
	Transaction *string `xml:"v3:transaction"`
	Reference   *string `xml:"v3:reference"`
}

// Trn is Unique request ID. Comes from an external system.
type Trn struct {
	XMLName   xml.Name `xml:"trn"`
	Status    int      `xml:"status"`
	ColvirId  int64    `xml:"colvirId"`
	Reference string   `xml:"reference"`
	*ResponseHeader
}

// ResponseBody is STAT operation response body.
type ResponseBody struct {
	Trn *Trn `xml:"trn"`
}

// Status is Transaction fixed at CAP system. Rejected at CBS.
type Status int

// ResponseHeader is Transaction route.
type ResponseHeader struct {
	Status     int    `xml:"status"`
	ColvirId   int64  `xml:"colvirId"`
	Route      string `xml:"route"`
	SynchState int    `xml:"synchState"`
	*ResponseHeader
}